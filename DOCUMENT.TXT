Functions

set_mode(int mode);     sets video mode
plot_pixel_bios(int x, int y, byte color);      plots a pixel using BIOS functions
plot_pixel_memory(int x, int y, byte color);    plots a pixel by writing to video memory
line_slow(int x1, int y1, int x2, int y2, byte color);  plots a line by using multiplication and divison
line_fast(int x1, int y1, int x2, int y2, byte color);  plots a line by using Bresenham's algorithm
polygon(int num_vertices, int *vertices, byte color);   plots a polygon
rect_slow(int left, int top, int right, int bottom, byte color);        draws rectangle by calling the line_fast function
rect_fast(int left, int top, int right, int bottom, byte color);        draws a rectange by drawing lines by itself
void rect_fill(int left, int top, int right, int bottom, byte color);	draws a rectange and fills it in with the selected color
void circle_slow(int x, int y, int radius, byte color);		draws a circle by using floating point numbers and math fuctions
void circle_fast(int x, int y, int radius, byte color);		draws a circle by using fixed point numbers and a trigonometry table
void circle_fill(int x, int y, int radius, byte color);		draws a cirlce and fills it with the selected color

Bitmaps
void fskip(FILE *fp, int num_bytes)		Skips bytes in a file
void load_bmp(char *file, BITMAP *b);	Load a bmp file into memory
void draw_bitmap(BITMAP *bmp,int x,int y);	draws a bitmap
void draw_transparent_bitmap(BITMAP *bmp, int x, int y);	draws a transparent bitmap
void wait(int ticks);	waits an amount of ticks (18hz clock)